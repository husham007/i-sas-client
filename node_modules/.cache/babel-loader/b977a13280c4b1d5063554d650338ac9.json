{"ast":null,"code":"var _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/Auth/LogIn.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { signIn } from '../../store/actions/authAction';\nimport { Redirect } from 'react-router-dom';\n\nconst styles = theme => ({\n  button: {// backgroundColor: '#2b679b',\n    // color:'white'\n  }\n});\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            id = _e$target.id,\n            value = _e$target.value;\n      this.setState({\n        [id]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.signIn(this.state);\n    };\n\n    this.state = {\n      open: false,\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    // let { open, email, password } = this.state;\n    // let { isLoginPending, isLoginSuccess, loginError } = this.props;\n    const _this$state = this.state,\n          open = _this$state.open,\n          email = _this$state.email,\n          password = _this$state.password,\n          _this$props = this.props,\n          authError = _this$props.authError,\n          auth = _this$props.auth; // const { authError, auth } = this.props;\n\n    if (auth.uid) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleToggle,\n      style: {\n        borderStyle: 'solid',\n        borderBottomRightRadius: '5',\n        borderTopRightRadius: '5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleToggle,\n      fullWidth: true,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(DialogContent, {\n      style: {\n        margin: '10px 60px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Get started straight away\"), React.createElement(TextField, {\n      autoFocus: true,\n      autoComplete: \"off\",\n      margin: \"dense\",\n      id: \"email\",\n      label: \"Email\",\n      variant: \"filled\",\n      type: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      margin: \"dense\",\n      id: \"password\",\n      label: \"Password\",\n      variant: \"filled\",\n      type: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      dis: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"GET STARTED\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, authError ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, authError) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default compose(withStyles(styles), connect(mapStateToProps, mapDispatchToProps))(LogIn);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/Auth/LogIn.jsx"],"names":["React","Component","Button","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","DialogActions","Link","withStyles","connect","compose","signIn","Redirect","styles","theme","button","LogIn","constructor","props","handleToggle","setState","open","state","handleChange","e","target","id","value","handleSubmit","preventDefault","email","password","render","authError","auth","uid","borderStyle","borderBottomRightRadius","borderTopRightRadius","margin","mapStateToProps","console","log","firebase","mapDispatchToProps","dispatch","creds"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { signIn } from '../../store/actions/authAction'\nimport { Redirect } from 'react-router-dom'\n\nconst styles = theme => ({\n    button: {\n        // backgroundColor: '#2b679b',\n        // color:'white'\n    }\n})\n\nclass LogIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            email: '',\n            password: ''\n        }\n    }\n\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    handleChange = e => {\n        const { id, value } = e.target\n        this.setState({\n            [id]: value\n        })\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render() {\n        // let { open, email, password } = this.state;\n        // let { isLoginPending, isLoginSuccess, loginError } = this.props;\n        const { open, email, password } = this.state,\n            { authError, auth } = this.props;\n        // const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleToggle} style={{ borderStyle: 'solid', borderBottomRightRadius: '5', borderTopRightRadius: '5' }}>\n                    Log In\n                </Button>\n                <Dialog open={open} onClose={this.handleToggle} fullWidth maxWidth=\"xs\">\n                    <DialogTitle id=\"form-dialog-title\">Log In</DialogTitle>\n                    <DialogContent style={{ margin: '10px 60px' }}>\n                        <DialogContentText>\n                            Get started straight away\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            autoComplete='off'\n                            margin=\"dense\"\n                            id=\"email\"\n                            label=\"Email\"\n                            variant=\"filled\"\n                            type=\"email\"\n                            value={email}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label=\"Password\"\n                            variant=\"filled\"\n                            type=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n\n                    </DialogContent>\n                    <DialogActions >\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} dis fullWidth>\n                            GET STARTED\n                        </Button>\n                        <div>\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default compose(\n    withStyles(styles),\n    connect(mapStateToProps, mapDispatchToProps)\n)(LogIn)\n"]},"metadata":{},"sourceType":"module"}