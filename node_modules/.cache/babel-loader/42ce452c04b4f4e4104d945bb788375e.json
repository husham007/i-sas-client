{"ast":null,"code":"var _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/CreateQuestion.jsx\";\nimport React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Select, Fab, Radio, MenuItem, FormHelperText } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createQuestion } from '../../store/actions/bankAction'; // import { Redirect } from 'react-router-dom'\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass CreateQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handleChange = name => ({\n      target: {\n        value\n      }\n    }) => {\n      // const { id, value } = e.target\n      this.setState({\n        [name]: value // selected: value\n\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state); // this.props.history.push('/questionBank');\n\n      const _this$state = this.state,\n            questionType = _this$state.questionType,\n            question = _this$state.question,\n            questionCategory = _this$state.questionCategory,\n            questionLevel = _this$state.questionLevel,\n            answer = _this$state.answer;\n      const newQ = {\n        id: uuidv4(),\n        questionType,\n        question,\n        questionCategory,\n        questionLevel,\n        answer\n      };\n      this.setState({\n        newQuestion: [...this.state.newQuestion, newQ]\n      }); // this.props.createQuestion(newQ);\n      // this.setState({ hasError: false });\n      // if (!this.state.selected) {\n      //     this.setState({ hasError: true });\n      // }\n    };\n\n    this.state = {\n      open: false,\n      selected: null,\n      hasError: false,\n      id: '',\n      questionType: '',\n      question: '',\n      questionCategory: '',\n      questionLevel: '',\n      answer: '',\n      newQuestion: []\n    };\n  }\n\n  // handleClick = () => {\n  //     this.setState({ hasError: false });\n  //     if (!this.state.selected) {\n  //         this.setState({ hasError: true });\n  //     }\n  // }\n  render() {\n    const _this$state2 = this.state,\n          open = _this$state2.open,\n          selected = _this$state2.selected,\n          hasError = _this$state2.hasError,\n          questionType = _this$state2.questionType,\n          questionLevel = _this$state2.questionLevel,\n          questionCategory = _this$state2.questionCategory,\n          question = _this$state2.question,\n          answer = _this$state2.answer;\n    const classes = this.props.classes; // const { auth } = this.props\n    // if (!auth.uid) return <Redirect to=\"/\" />\n\n    return React.createElement(\"form\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      onClick: this.handleToggle,\n      \"aria-label\": \"Add\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleToggle,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Create Question\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"To create a new question.\"), React.createElement(FormControl, {\n      className: classes.formControl,\n      error: hasError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"questionType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Question Type : \"), React.createElement(Select, {\n      fullWidth: true,\n      name: \"questionType\",\n      value: quest,\n      onChange: this.handleChange('questionType'),\n      input: React.createElement(Input, {\n        id: \"questionType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"singleChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Single Choice\"), React.createElement(MenuItem, {\n      value: \"multipleChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(MenuItem, {\n      value: \"matching\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Matching\"), React.createElement(MenuItem, {\n      value: \"fillBlank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Fill the Blank\")), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Question : \"), React.createElement(Input, {\n      id: \"question\",\n      name: \"question\",\n      onChange: this.handleChange('question'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      error: hasError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"questionCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Question Category : \"), React.createElement(Select, {\n      fullWidth: true,\n      name: \"questionCategory\",\n      value: selected,\n      onChange: this.handleChange('questionCategory'),\n      input: React.createElement(Input, {\n        id: \"questionCategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"midterm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"midTerm\"), React.createElement(MenuItem, {\n      value: \"weeklyTest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"weekly test\"), React.createElement(MenuItem, {\n      value: \"finalExam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Final Exam\")), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      component: \"fieldset\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"questionLevel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Question Level : \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(RadioGroup, {\n      name: \"questionLevel\",\n      onChange: this.handleChange('questionLevel'),\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"easy\",\n      id: \"easy\",\n      name: \"easy\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }),\n      label: \"Easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"medium\",\n      id: \"medium\",\n      name: \"medium\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }),\n      label: \"Medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"hard\",\n      id: \"hard\",\n      name: \"hard\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      label: \"Hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Answer : \"), React.createElement(Input, {\n      id: \"answer\",\n      name: \"answer\",\n      onChange: this.handleChange('answer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleToggle,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      component: Link,\n      to: \"/questionBank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"CREATE\"))));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//         auth: state.firebase.auth\n//     }\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createQuestion: question => dispatch(createQuestion(question))\n  };\n}; // export default compose(\n//     withStyles(styles),\n//     connect(mapStateToProps,mapDispatchToProps)\n// )(CreateQuestion);\n\n\nexport default compose(withStyles(styles), connect(null, mapDispatchToProps))(CreateQuestion);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/CreateQuestion.jsx"],"names":["React","Component","uuidv4","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","FormControl","RadioGroup","FormControlLabel","InputLabel","Input","Select","Fab","Radio","MenuItem","FormHelperText","AddIcon","withStyles","Link","connect","compose","createQuestion","styles","theme","root","display","flexDirection","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","CreateQuestion","constructor","props","handleToggle","setState","open","state","handleChange","name","target","value","handleSubmit","e","preventDefault","console","log","questionType","question","questionCategory","questionLevel","answer","newQ","id","newQuestion","selected","hasError","render","classes","quest","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4'\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, RadioGroup, FormControlLabel, InputLabel, Input, Select, Fab, Radio, MenuItem, FormHelperText } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { createQuestion } from '../../store/actions/bankAction'\n// import { Redirect } from 'react-router-dom'\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: 'column',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2\n    }\n});\n\nclass CreateQuestion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            selected: null,\n            hasError: false,\n            id:'',\n            questionType: '',\n            question: '',\n            questionCategory: '',\n            questionLevel: '',\n            answer: '',\n            newQuestion:[]\n        }\n    }\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    handleChange = name => ({ target: { value } }) => {\n        // const { id, value } = e.target\n        this.setState({\n            [name]: value\n            // selected: value\n        })\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state)\n        // this.props.history.push('/questionBank');\n        const {questionType,question,questionCategory,questionLevel,answer} = this.state\n        const newQ = {\n            id: uuidv4(),\n            questionType,\n            question,\n            questionCategory,\n            questionLevel,\n            answer\n        }\n        this.setState({\n            newQuestion: [...this.state.newQuestion, newQ]\n        })\n        // this.props.createQuestion(newQ);\n        // this.setState({ hasError: false });\n        // if (!this.state.selected) {\n        //     this.setState({ hasError: true });\n        // }\n    }\n    // handleClick = () => {\n    //     this.setState({ hasError: false });\n    //     if (!this.state.selected) {\n    //         this.setState({ hasError: true });\n    //     }\n    // }\n    render() {\n        const { open, selected, hasError,questionType,questionLevel,questionCategory,question,answer } = this.state;\n        const { classes } = this.props;\n        // const { auth } = this.props\n        // if (!auth.uid) return <Redirect to=\"/\" />\n        return (\n            <form className={classes.root}>\n                <Fab onClick={this.handleToggle} aria-label=\"Add\" color=\"secondary\" >\n                    <AddIcon />\n                </Fab>\n                <Dialog open={open} onClose={this.handleToggle} fullWidth>\n                    <DialogTitle id=\"form-dialog-title\">Create Question</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To create a new question.\n                        </DialogContentText>\n                        <FormControl className={classes.formControl} error={hasError} >\n                            <InputLabel htmlFor=\"questionType\">Question Type : </InputLabel>\n                            <Select\n                                fullWidth\n                                name=\"questionType\"\n                                value={quest}\n                                onChange={this.handleChange('questionType')}\n                                input={<Input id=\"questionType\" />}\n                            >\n                                <MenuItem value=\"singleChoice\">Single Choice</MenuItem>\n                                <MenuItem value=\"multipleChoice\">Multiple Choice</MenuItem>\n                                <MenuItem value=\"matching\">Matching</MenuItem>\n                                <MenuItem value=\"fillBlank\">Fill the Blank</MenuItem>\n                            </Select>\n\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"question\">Question : </InputLabel>\n                            <Input id=\"question\" name=\"question\" onChange={this.handleChange('question')} />\n                        </FormControl>\n                        <br />\n                        <FormControl className={classes.formControl} error={hasError} >\n                            <InputLabel htmlFor=\"questionCategory\">Question Category : </InputLabel>\n                            <Select\n                                fullWidth\n                                name=\"questionCategory\"\n                                value={selected}\n                                onChange={this.handleChange('questionCategory')}\n                                input={<Input id=\"questionCategory\" />}\n                            >\n                                <MenuItem value=\"midterm\">midTerm</MenuItem>\n                                <MenuItem value=\"weeklyTest\">weekly test</MenuItem>\n                                <MenuItem value=\"finalExam\">Final Exam</MenuItem>\n                            </Select>\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl component=\"fieldset\" fullWidth>\n                            <InputLabel htmlFor=\"questionLevel\">Question Level : </InputLabel>\n                            <br />\n                            <RadioGroup name=\"questionLevel\" onChange={this.handleChange('questionLevel')} style={{ display: 'inline-block' }}>\n                                <FormControlLabel\n                                    value=\"easy\"\n                                    id=\"easy\"\n                                    name=\"easy\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Easy\"\n                                />\n                                <FormControlLabel\n                                    value=\"medium\"\n                                    id=\"medium\"\n                                    name=\"medium\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Medium\"\n                                />\n                                <FormControlLabel\n                                    value=\"hard\"\n                                    id=\"hard\"\n                                    name=\"hard\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Hard\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <br />\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor=\"answer\">Answer : </InputLabel>\n                            <Input id=\"answer\" name=\"answer\" onChange={this.handleChange('answer')} />\n                        </FormControl>\n                        <br />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleToggle} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={this.handleSubmit} component={Link} to=\"/questionBank\">\n                            CREATE\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </form>\n        );\n    }\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         auth: state.firebase.auth\n//     }\n// }\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createQuestion: (question) => dispatch(createQuestion(question))\n    }\n}\n\n// export default compose(\n//     withStyles(styles),\n//     connect(mapStateToProps,mapDispatchToProps)\n// )(CreateQuestion);\nexport default compose(\n    withStyles(styles),\n    connect(null, mapDispatchToProps)\n)(CreateQuestion)"]},"metadata":{},"sourceType":"module"}