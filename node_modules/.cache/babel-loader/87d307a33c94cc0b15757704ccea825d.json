{"ast":null,"code":"import _slicedToArray from \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/MenuItems/QuestionBank.jsx\";\nimport React, { Component } from 'react';\nimport QuestionList from '../questionBank/QuestionList';\nimport { AppBar, Tabs, Tab, Typography, Box, makeStyles } from '@material-ui/core';\nimport CreateQuestion from '../questionBank/CreateQuestion';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  shortIndicator: {\n    maxWidth: 60,\n    marginLeft: theme.spacing(6)\n  }\n}));\n\nfunction TabPanel(props) {\n  const children = props.children,\n        value = props.value,\n        index = props.index,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"simple-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"simple-tab-\".concat(index)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, children));\n}\n\nclass QuestionBank extends Component {\n  render() {\n    console.log(this.props);\n    const classes = useStyles();\n\n    const _React$useState = React.useState(0),\n          _React$useState2 = _slicedToArray(_React$useState, 2),\n          value = _React$useState2[0],\n          setValue = _React$useState2[1];\n\n    handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    const questions = this.props.questions;\n    return React.createElement(\"div\", {\n      value: value,\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: value,\n      onChange: handleChange,\n      classes: {\n        indicator: classes.shortIndicator\n      },\n      indicatorColor: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"CREATE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"SEARCH\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"STATESTICS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(TabPanel, {\n      value: value,\n      index: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CreateQuestion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(QuestionList, {\n      questions: questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      value: value,\n      index: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"search\"), React.createElement(TabPanel, {\n      value: value,\n      index: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"statestics\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.bank.questions // auth: state.firebase.auth\n\n  };\n}; // export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'questions'}\n//     ])\n// )(QuestionBank)\n\n\nexport default connect(mapStateToProps)(QuestionBank);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/MenuItems/QuestionBank.jsx"],"names":["React","Component","QuestionList","AppBar","Tabs","Tab","Typography","Box","makeStyles","CreateQuestion","connect","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","shortIndicator","maxWidth","marginLeft","spacing","TabPanel","props","children","value","index","other","QuestionBank","render","console","log","classes","useState","setValue","handleChange","event","newValue","questions","indicator","mapStateToProps","state","bank"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport QuestionList from '../questionBank/QuestionList'\nimport { AppBar, Tabs, Tab, Typography,Box, makeStyles } from '@material-ui/core'\nimport CreateQuestion from '../questionBank/CreateQuestion';\nimport { connect } from 'react-redux'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    shortIndicator: {\n        maxWidth: 60,\n        marginLeft: theme.spacing(6),\n    }\n}));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nclass QuestionBank extends Component {\n    render(){\n        console.log(this.props)\n        const classes = useStyles();\n        const [value, setValue] = React.useState(0);\n\n        handleChange=(event, newValue)=> {\n            setValue(newValue);\n        }\n\n        const { questions } = this.props\n        return (\n            <div value={value} className={classes.root}>\n                <AppBar position=\"static\" color=\"secondary\">\n                    <Tabs value={value} onChange={handleChange} classes={{ indicator: classes.shortIndicator }} indicatorColor=\"primary\">\n                        <Tab label=\"CREATE\" />\n                        <Tab label=\"SEARCH\" />\n                        <Tab label=\"STATESTICS\" />\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0} >\n                    <CreateQuestion />\n                    <QuestionList\n                        questions={questions}\n                    />\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    search\n            </TabPanel>\n                <TabPanel value={value} index={2}>\n                    statestics\n            </TabPanel>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        questions: state.bank.questions,\n        // auth: state.firebase.auth\n    }\n}\n\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'questions'}\n//     ])\n// )(QuestionBank)\n\nexport default connect(mapStateToProps)(QuestionBank)"]},"metadata":{},"sourceType":"module"}