{"ast":null,"code":"import _objectSpread from \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CREATE_QUESTION, DELETE_QUESTION, EDIT_QUESTION, SEARCH_QUESTION_ANY } from '../actions/actionTypes';\nconst initState = {\n  questions: [{\n    id: '1',\n    questionType: 'fill blanks',\n    question: 'what is array ?',\n    questionCategory: 'javascript',\n    questionLevel: 'medium',\n    answer: 'a variable that contains many values.' // createdAt: ''\n\n  }, {\n    id: '2',\n    questionType: 'multiple choice',\n    question: 'which one is variable ?',\n    questionCategory: 'javascript',\n    questionLevel: 'easy',\n    answer: 'a variable that contains many values.' // createdAt: ''\n\n  }, {\n    id: '3',\n    questionType: 'Single choice',\n    question: 'what is arrow function ?',\n    questionCategory: 'javascript',\n    questionLevel: 'hard',\n    answer: 'a variable that contains many values.' // createdAt: ''\n\n  }] // question: ''\n\n};\n\nconst bankReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CREATE_QUESTION:\n      console.log('created question :)', payload.question);\n      return _objectSpread({}, state, {\n        questions: [...state.questions, payload.question]\n      });\n\n    case DELETE_QUESTION:\n      console.log('this is deleted...');\n      const questions = [...state.questions];\n      questions.splice(payload.index, 1);\n      return _objectSpread({}, state, {\n        questions: questions\n      });\n\n    case EDIT_QUESTION:\n      console.log('this is edited !');\n      const Qs = [...state.questions];\n      Qs.splice(payload.index, 1, payload.index);\n      return _objectSpread({}, state, {\n        questions: Qs\n      });\n\n    case SEARCH_QUESTION_ANY:\n      console.log('search result!');\n    // const filteredQ = [...state.questions];\n    // const searched = filteredQ.filter( q =>{\n    //     const isSearched = q.question.toLowerCase().includes(payload.question)\n    //     return isSearched;\n    // })\n    // const result = payload.questions === '' ? null : searched;\n    // return { ...state, questions: result };\n\n    default:\n      return state;\n  }\n};\n\nexport default bankReducer;","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/store/reducers/bankReducer.jsx"],"names":["CREATE_QUESTION","DELETE_QUESTION","EDIT_QUESTION","SEARCH_QUESTION_ANY","initState","questions","id","questionType","question","questionCategory","questionLevel","answer","bankReducer","state","type","payload","console","log","splice","index","Qs"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,aAA3C,EAA0DC,mBAA1D,QAAqF,wBAArF;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,YAAY,EAAE,aAFlB;AAGIC,IAAAA,QAAQ,EAAE,iBAHd;AAIIC,IAAAA,gBAAgB,EAAE,YAJtB;AAKIC,IAAAA,aAAa,EAAE,QALnB;AAMIC,IAAAA,MAAM,EAAE,uCANZ,CAOI;;AAPJ,GADO,EAUP;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,YAAY,EAAE,iBAFlB;AAGIC,IAAAA,QAAQ,EAAE,yBAHd;AAIIC,IAAAA,gBAAgB,EAAE,YAJtB;AAKIC,IAAAA,aAAa,EAAE,MALnB;AAMIC,IAAAA,MAAM,EAAE,uCANZ,CAOI;;AAPJ,GAVO,EAmBP;AACIL,IAAAA,EAAE,EAAE,GADR;AAEIC,IAAAA,YAAY,EAAE,eAFlB;AAGIC,IAAAA,QAAQ,EAAE,0BAHd;AAIIC,IAAAA,gBAAgB,EAAE,YAJtB;AAKIC,IAAAA,aAAa,EAAE,MALnB;AAMIC,IAAAA,MAAM,EAAE,uCANZ,CAOI;;AAPJ,GAnBO,CADG,CA+Bd;;AA/Bc,CAAlB;;AAkCA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGT,SAAT,EAAoB;AAAEU,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AAC1D,UAAQD,IAAR;AACI,SAAKd,eAAL;AACIgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,OAAO,CAACP,QAA3C;AACA,+BAAYK,KAAZ;AAAmBR,QAAAA,SAAS,EAAE,CAAC,GAAGQ,KAAK,CAACR,SAAV,EAAqBU,OAAO,CAACP,QAA7B;AAA9B;;AACJ,SAAKP,eAAL;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACI,YAAMZ,SAAS,GAAG,CAAC,GAAGQ,KAAK,CAACR,SAAV,CAAlB;AACAA,MAAAA,SAAS,CAACa,MAAV,CAAiBH,OAAO,CAACI,KAAzB,EAAgC,CAAhC;AACA,+BAAYN,KAAZ;AAAmBR,QAAAA,SAAS,EAAEA;AAA9B;;AACJ,SAAKH,aAAL;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACI,YAAMG,EAAE,GAAG,CAAC,GAAGP,KAAK,CAACR,SAAV,CAAX;AACAe,MAAAA,EAAE,CAACF,MAAH,CAAUH,OAAO,CAACI,KAAlB,EAAyB,CAAzB,EAA2BJ,OAAO,CAACI,KAAnC;AACA,+BAAYN,KAAZ;AAAmBR,QAAAA,SAAS,EAAEe;AAA9B;;AACJ,SAAKjB,mBAAL;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACI;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,aAAOJ,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import { CREATE_QUESTION, DELETE_QUESTION, EDIT_QUESTION, SEARCH_QUESTION_ANY } from '../actions/actionTypes'\n\nconst initState = {\n    questions: [\n        {\n            id: '1',\n            questionType: 'fill blanks',\n            question: 'what is array ?',\n            questionCategory: 'javascript',\n            questionLevel: 'medium',\n            answer: 'a variable that contains many values.',\n            // createdAt: ''\n        },\n        {\n            id: '2',\n            questionType: 'multiple choice',\n            question: 'which one is variable ?',\n            questionCategory: 'javascript',\n            questionLevel: 'easy',\n            answer: 'a variable that contains many values.',\n            // createdAt: ''\n        },\n        {\n            id: '3',\n            questionType: 'Single choice',\n            question: 'what is arrow function ?',\n            questionCategory: 'javascript',\n            questionLevel: 'hard',\n            answer: 'a variable that contains many values.',\n            // createdAt: ''\n        },\n\n    ],\n    // question: ''\n};\n\nconst bankReducer = (state = initState, { type, payload }) => {\n    switch (type) {\n        case CREATE_QUESTION:\n            console.log('created question :)', payload.question)\n            return { ...state, questions: [...state.questions, payload.question] };\n        case DELETE_QUESTION:\n        console.log('this is deleted...')\n            const questions = [...state.questions];\n            questions.splice(payload.index, 1);\n            return { ...state, questions: questions };\n        case EDIT_QUESTION:\n        console.log('this is edited !')\n            const Qs = [...state.questions];\n            Qs.splice(payload.index, 1,payload.index);\n            return { ...state, questions: Qs };\n        case SEARCH_QUESTION_ANY:\n        console.log('search result!')\n            // const filteredQ = [...state.questions];\n            // const searched = filteredQ.filter( q =>{\n            //     const isSearched = q.question.toLowerCase().includes(payload.question)\n            //     return isSearched;\n            // })\n            // const result = payload.questions === '' ? null : searched;\n            // return { ...state, questions: result };\n            default:\n            return state;\n    }\n};\n\nexport default bankReducer"]},"metadata":{},"sourceType":"module"}