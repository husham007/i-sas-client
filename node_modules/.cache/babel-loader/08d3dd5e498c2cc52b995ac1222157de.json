{"ast":null,"code":"var _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/Alerts/DeleteAlert.js\";\nimport React, { Component } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle, DialogContent } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { deleteQuestion } from '../../store/actions/bankAction';\nimport { connect } from 'react-redux';\nimport Slide from '@material-ui/core/Slide';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n});\n\nclass DeleteAlert extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          deleteQuestion = _this$props.deleteQuestion;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      onClick: this.handleToggle,\n      style: {\n        color: '#d32f2f'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Delete\", React.createElement(Delete, {\n      style: {\n        marginLeft: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: this.handleToggle,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-slide-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Are you sure you want to delete this question ?\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-slide-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      onClick: () => deleteQuestion(question.id),\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" Delete \")), React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleToggle,\n      variant: \"outlined\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default connect(null, {\n  deleteQuestion\n})(DeleteAlert);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/Alerts/DeleteAlert.js"],"names":["React","Component","Button","Dialog","DialogActions","DialogTitle","DialogContent","Delete","deleteQuestion","connect","Slide","Transition","forwardRef","props","ref","DeleteAlert","state","open","handleToggle","setState","render","question","color","marginLeft","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle,DialogContent, } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport { deleteQuestion } from '../../store/actions/bankAction';\nimport { connect } from 'react-redux'\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\n\nclass DeleteAlert extends Component {\n    state = {\n        open: false\n    }\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    render() {\n        const { question, deleteQuestion } = this.props;\n        return (\n            <div>\n                <Button size=\"small\" variant=\"outlined\" onClick={this.handleToggle} style={{ color: '#d32f2f' }}>\n                    Delete\n                <Delete style={{ marginLeft: 10 }} />\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleToggle}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to delete this question ?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Let Google help apps determine location. This means sending anonymous location data to\n                            Google, even when no apps are running.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button size=\"small\" onClick={() => deleteQuestion(question.id)} variant=\"contained\" color=\"secondary\">\n                            <div onClick={this.handleToggle}> Delete </div>\n                        </Button>\n                        <Button size=\"small\" onClick={this.handleToggle} variant=\"outlined\" color=\"primary\">\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, { deleteQuestion })(DeleteAlert);"]},"metadata":{},"sourceType":"module"}