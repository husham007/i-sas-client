{"ast":null,"code":"import { CREATE_QUESTION, DELETE_QUESTION } from './actionTypes'; // export const createQuestion = question => {\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\n//         // make async call to database\n//         const firestore = getFirestore();\n//         const profile = getState().firebase.profile;\n//         const authorId = getState().firebase.auth.uid;\n//         firestore.collection('questions').add({\n//             ...question,\n//             authorFirstName: profile.firstName,\n//             authorLastName: profile.lastName,\n//             authorId: authorId,\n//             createdAt: new Date()\n//         }).then(() => {\n//             dispatch({ type: 'CREATE_QUESTION_SUCCESS', question });\n//         }).catch(err =>{\n//             dispatch({ type: 'CREATE_QUESTION_ERROR', err });\n//         })\n//     }\n// };\n\nexport const createQuestion = () => {\n  return {\n    type: 'CREATE_QUESTION_SUCCESS' // payload:{\n    //     question: newQuestion\n    // }\n\n  };\n};","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/store/actions/bankAction.jsx"],"names":["CREATE_QUESTION","DELETE_QUESTION","createQuestion","type"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAkD,eAAlD,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAK;AAC/B,SAAM;AACFC,IAAAA,IAAI,EAAC,yBADH,CAGF;AACA;AACA;;AALE,GAAN;AAOH,CARM","sourcesContent":["import { CREATE_QUESTION, DELETE_QUESTION, } from './actionTypes';\n// export const createQuestion = question => {\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\n//         // make async call to database\n//         const firestore = getFirestore();\n//         const profile = getState().firebase.profile;\n//         const authorId = getState().firebase.auth.uid;\n//         firestore.collection('questions').add({\n//             ...question,\n//             authorFirstName: profile.firstName,\n//             authorLastName: profile.lastName,\n//             authorId: authorId,\n//             createdAt: new Date()\n//         }).then(() => {\n//             dispatch({ type: 'CREATE_QUESTION_SUCCESS', question });\n//         }).catch(err =>{\n//             dispatch({ type: 'CREATE_QUESTION_ERROR', err });\n//         })\n\n\n//     }\n// };\n\nexport const createQuestion = () =>{\n    return{\n        type:'CREATE_QUESTION_SUCCESS',\n        \n        // payload:{\n        //     question: newQuestion\n        // }\n    }\n}"]},"metadata":{},"sourceType":"module"}