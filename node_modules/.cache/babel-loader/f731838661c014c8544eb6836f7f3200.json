{"ast":null,"code":"// export const createQuestion = question => {\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\n//         // make async call to database\n//         const firestore = getFirestore();\n//         const profile = getState().firebase.profile;\n//         const authorId = getState().firebase.auth.uid;\n//         firestore.collection('questions').add({\n//             ...question,\n//             authorFirstName: profile.firstName,\n//             authorLastName: profile.lastName,\n//             authorId: authorId,\n//             createdAt: new Date()\n//         }).then(() => {\n//             dispatch({ type: 'CREATE_QUESTION_SUCCESS', question });\n//         }).catch(err =>{\n//             dispatch({ type: 'CREATE_QUESTION_ERROR', err });\n//         })\n//     }\n// };\nexport const createQuestion = newQuestion => {\n  return {\n    type: 'CREATE_QUESTION_SUCCESS',\n    payload: {\n      question: newQuestion\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/store/actions/bankAction.jsx"],"names":["createQuestion","newQuestion","type","payload","question"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,OAAO,MAAMA,cAAc,GAAGC,WAAW,IAAG;AACxC,SAAM;AACFC,IAAAA,IAAI,EAAC,yBADH;AAGFC,IAAAA,OAAO,EAAC;AACJC,MAAAA,QAAQ,EAAEH;AADN;AAHN,GAAN;AAOH,CARM","sourcesContent":["\n// export const createQuestion = question => {\n//     return (dispatch, getState, { getFirebase, getFirestore }) => {\n//         // make async call to database\n//         const firestore = getFirestore();\n//         const profile = getState().firebase.profile;\n//         const authorId = getState().firebase.auth.uid;\n//         firestore.collection('questions').add({\n//             ...question,\n//             authorFirstName: profile.firstName,\n//             authorLastName: profile.lastName,\n//             authorId: authorId,\n//             createdAt: new Date()\n//         }).then(() => {\n//             dispatch({ type: 'CREATE_QUESTION_SUCCESS', question });\n//         }).catch(err =>{\n//             dispatch({ type: 'CREATE_QUESTION_ERROR', err });\n//         })\n\n\n//     }\n// };\n\nexport const createQuestion = newQuestion =>{\n    return{\n        type:'CREATE_QUESTION_SUCCESS',\n        \n        payload:{\n            question: newQuestion\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}