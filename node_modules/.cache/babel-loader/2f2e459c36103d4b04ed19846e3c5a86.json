{"ast":null,"code":"var _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/EditQuestion.jsx\";\nimport React, { Component } from 'react'; // import uuidv4 from 'uuid/v4'\n\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, FormLabel, RadioGroup, FormControlLabel, InputLabel, Input, Select, Radio, MenuItem, FormHelperText } from '@material-ui/core';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { editQuestion } from '../../store/actions/bankAction';\nimport { Edit } from '@material-ui/icons'; // import { Redirect } from 'react-router-dom'\n\nimport Slide from '@material-ui/core/Slide';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n});\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: 'column'\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  editBtn: {\n    marginLeft: 10,\n    [theme.breakpoints.down('sx')]: {\n      display: 'none'\n    }\n  }\n});\n\nclass EditQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handleChange = e => {\n      // console.log(this.state)\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleRadios = name => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.props.question.id);\n      console.log(this.state);\n      const _this$state = this.state,\n            id = _this$state.id,\n            question = _this$state.question,\n            questionType = _this$state.questionType,\n            questionCategory = _this$state.questionCategory,\n            questionLevel = _this$state.questionLevel,\n            answer = _this$state.answer;\n      const q = {\n        id,\n        question,\n        questionType,\n        questionCategory,\n        questionLevel,\n        answer\n      };\n      this.props.editQuestion(q);\n      this.setState({\n        hasError: false\n      });\n\n      if (!question || !questionType || !questionCategory || !questionLevel || !answer) {\n        this.setState({\n          hasError: true\n        });\n      } else {\n        this.handleToggle();\n      }\n    };\n\n    this.state = {\n      open: false,\n      selected: null,\n      hasError: false,\n      id: this.props.question.id,\n      question: this.props.question.question,\n      questionType: this.props.question.questionType,\n      questionCategory: this.props.question.questionCategory,\n      questionLevel: this.props.question.questionLevel,\n      answer: this.props.question.answer\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          open = _this$state2.open,\n          hasError = _this$state2.hasError;\n    const classes = this.props.classes;\n    const _this$state3 = this.state,\n          question = _this$state3.question,\n          questionType = _this$state3.questionType,\n          questionCategory = _this$state3.questionCategory,\n          questionLevel = _this$state3.questionLevel,\n          answer = _this$state3.answer; // const { auth } = this.props\n    // if (!auth.uid) return <Redirect to=\"/\" />\n\n    return React.createElement(\"form\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleToggle,\n      variant: \"outlined\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Edit \", React.createElement(Edit, {\n      className: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleToggle,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      style: {\n        paddingBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Edit Question\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"To edit this question.\"), React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.formControl,\n      error: hasError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"questionType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Question Type : \"), React.createElement(Select, {\n      name: \"questionType\",\n      value: questionType,\n      onChange: this.handleChange,\n      input: React.createElement(Input, {\n        id: \"questionType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"singleChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Single Choice\"), React.createElement(MenuItem, {\n      value: \"multipleChoice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(MenuItem, {\n      value: \"matching\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Matching\"), React.createElement(MenuItem, {\n      value: \"fillBlank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Fill the Blank\")), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      error: hasError,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Question : \"), React.createElement(Input, {\n      id: \"question\",\n      name: \"question\",\n      value: question,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      fullWidth: true,\n      className: classes.formControl,\n      error: hasError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"questionCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Question Category : \"), React.createElement(Select, {\n      name: \"questionCategory\",\n      value: questionCategory,\n      onChange: this.handleChange,\n      input: React.createElement(Input, {\n        id: \"questionCategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"midterm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"midTerm\"), React.createElement(MenuItem, {\n      value: \"weeklyTest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"weekly test\"), React.createElement(MenuItem, {\n      value: \"finalExam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Final Exam\")), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      component: \"fieldset\",\n      className: classes.formControl,\n      error: hasError,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Question Level : \"), React.createElement(RadioGroup, {\n      name: \"questionLevel\",\n      value: questionLevel,\n      onChange: this.handleRadios('questionLevel'),\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"easy\",\n      id: \"easy\",\n      name: \"easy\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }),\n      label: \"Easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"medium\",\n      id: \"medium\",\n      name: \"medium\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }),\n      label: \"Medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"hard\",\n      id: \"hard\",\n      name: \"hard\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }),\n      label: \"Hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      error: hasError,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Answer : \"), React.createElement(Input, {\n      id: \"answer\",\n      name: \"answer\",\n      value: answer,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), hasError && React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"This is required!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      disabled: !question || !questionType || !questionCategory || !questionLevel || !answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleToggle,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"CANCEL\"))));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//         auth: state.firebase.auth\n//     }\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editQuestion: question => dispatch(editQuestion(question))\n  };\n}; // export default compose(\n//     withStyles(styles),\n//     connect(mapStateToProps,mapDispatchToProps)\n// )(CreateQuestion);\n\n\nexport default compose(withStyles(styles), connect(null, mapDispatchToProps))(EditQuestion);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/EditQuestion.jsx"],"names":["React","Component","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","FormControl","FormLabel","RadioGroup","FormControlLabel","InputLabel","Input","Select","Radio","MenuItem","FormHelperText","withStyles","connect","compose","editQuestion","Edit","Slide","Transition","forwardRef","props","ref","styles","theme","root","display","flexDirection","formControl","margin","spacing","minWidth","editBtn","marginLeft","breakpoints","down","EditQuestion","constructor","handleToggle","setState","open","state","handleChange","e","target","name","value","handleRadios","handleSubmit","preventDefault","console","log","question","id","questionType","questionCategory","questionLevel","answer","q","hasError","selected","render","classes","paddingBottom","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import uuidv4 from 'uuid/v4'\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, FormLabel, RadioGroup, FormControlLabel, InputLabel, Input, Select, Radio, MenuItem, FormHelperText } from '@material-ui/core'\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { editQuestion } from '../../store/actions/bankAction'\nimport { Edit } from '@material-ui/icons'\n// import { Redirect } from 'react-router-dom'\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\n\n\nconst styles = theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: 'column',\n    },\n    formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120\n    },\n    editBtn: {\n        marginLeft: 10,\n        [theme.breakpoints.down('sx')]:{\n            display:'none'\n        }\n    }\n});\n\nclass EditQuestion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            selected: null,\n            hasError: false,\n            id: this.props.question.id,\n            question: this.props.question.question,\n            questionType: this.props.question.questionType,\n            questionCategory: this.props.question.questionCategory,\n            questionLevel: this.props.question.questionLevel,\n            answer: this.props.question.answer\n        }\n    }\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    handleChange = e => {\n        // console.log(this.state)\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    handleRadios = name => ({ target: { value } }) => {\n        this.setState({\n            [name]: value\n        })\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.props.question.id)\n        console.log(this.state)\n        const { id,question, questionType, questionCategory, questionLevel, answer } = this.state\n        const q = {id,question, questionType, questionCategory, questionLevel, answer }\n        this.props.editQuestion(q);\n        \n        this.setState({ hasError: false });\n        if (!question || !questionType || !questionCategory || !questionLevel || !answer) {\n            this.setState({ hasError: true });\n        } else {\n            this.handleToggle()\n        }\n    }\n    render() {\n        const { open, hasError } = this.state;\n        const { classes } = this.props;\n        const { question, questionType, questionCategory, questionLevel, answer } = this.state;\n        // const { auth } = this.props\n        // if (!auth.uid) return <Redirect to=\"/\" />\n        return (\n            <form className={classes.root}>\n                <Button size=\"small\" onClick={this.handleToggle} variant=\"outlined\" color=\"primary\" >\n                    Edit <Edit className={{  }} />\n                </Button>\n                <Dialog open={open} onClose={this.handleToggle} TransitionComponent={Transition}\n                    keepMounted fullWidth>\n                    <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: 0 }} >Edit Question</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            To edit this question.\n                        </DialogContentText>\n                        <FormControl fullWidth className={classes.formControl} error={hasError} >\n                            <InputLabel htmlFor=\"questionType\">Question Type : </InputLabel>\n                            <Select\n                                name=\"questionType\"\n                                value={questionType}\n                                onChange={this.handleChange}\n                                input={<Input id=\"questionType\" />}\n                            >\n                                <MenuItem value=\"singleChoice\">Single Choice</MenuItem>\n                                <MenuItem value=\"multipleChoice\">Multiple Choice</MenuItem>\n                                <MenuItem value=\"matching\">Matching</MenuItem>\n                                <MenuItem value=\"fillBlank\">Fill the Blank</MenuItem>\n                            </Select>\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl className={classes.formControl} error={hasError} fullWidth>\n                            <InputLabel htmlFor=\"question\">Question : </InputLabel>\n                            <Input id=\"question\" name=\"question\" value={question} onChange={this.handleChange} />\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl fullWidth className={classes.formControl} error={hasError} >\n                            <InputLabel htmlFor=\"questionCategory\">Question Category : </InputLabel>\n                            <Select\n                                name=\"questionCategory\"\n                                value={questionCategory}\n                                onChange={this.handleChange}\n                                input={<Input id=\"questionCategory\" />}\n                            >\n                                <MenuItem value=\"midterm\">midTerm</MenuItem>\n                                <MenuItem value=\"weeklyTest\">weekly test</MenuItem>\n                                <MenuItem value=\"finalExam\">Final Exam</MenuItem>\n                            </Select>\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl component=\"fieldset\" className={classes.formControl} error={hasError} fullWidth>\n                            <FormLabel>Question Level : </FormLabel>\n                            <RadioGroup name=\"questionLevel\" value={questionLevel} onChange={this.handleRadios('questionLevel')} style={{ display: 'inline-block' }}>\n                                <FormControlLabel\n                                    value=\"easy\"\n                                    id=\"easy\"\n                                    name=\"easy\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Easy\"\n                                />\n                                <FormControlLabel\n                                    value=\"medium\"\n                                    id=\"medium\"\n                                    name=\"medium\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Medium\"\n                                />\n                                <FormControlLabel\n                                    value=\"hard\"\n                                    id=\"hard\"\n                                    name=\"hard\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Hard\"\n                                />\n                            </RadioGroup>\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                        <FormControl className={classes.formControl} error={hasError} fullWidth>\n                            <InputLabel htmlFor=\"answer\">Answer : </InputLabel>\n                            <Input id=\"answer\" name=\"answer\" value={answer} onChange={this.handleChange} />\n                            {hasError && <FormHelperText>This is required!</FormHelperText>}\n                        </FormControl>\n                        <br />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} disabled={!question || !questionType || !questionCategory || !questionLevel || !answer}>\n                            EDIT\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleToggle} color=\"secondary\">\n                            CANCEL\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </form>\n        );\n    }\n}\n\n// const mapStateToProps = state => {\n//     return {\n//         auth: state.firebase.auth\n//     }\n// }\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editQuestion: (question) => dispatch(editQuestion(question))\n    }\n}\n\n// export default compose(\n//     withStyles(styles),\n//     connect(mapStateToProps,mapDispatchToProps)\n// )(CreateQuestion);\nexport default compose(\n    withStyles(styles),\n    connect(null, mapDispatchToProps)\n)(EditQuestion)"]},"metadata":{},"sourceType":"module"}