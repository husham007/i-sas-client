{"ast":null,"code":"var _jsxFileName = \"/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/QuestionSummary.jsx\";\nimport React, { Component } from 'react'; // import moment from 'moment'\n\nimport { Card, CardActions, CardContent, Typography, Table, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport DeleteAlert from '../Alerts/DeleteAlert';\nimport EditQuestion from './EditQuestion';\nimport DeleteSnackbar from '../Alerts/DeleteSnackbar';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '60%',\n    margin: 'auto',\n    marginBottom: '12px',\n    background: '#011'\n  }\n});\n\nclass QuestionSummary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      del: false\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          classes = _this$props.classes; // console.log(question)\n\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      style: {\n        flex: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"question :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, question.question))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Type :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, question.questionType))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Level :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, question.questionLevel))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Category :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, question.questionCategory))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Answer :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, question.answer))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Author :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Mostafa Hazareh\"))), React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Issue by :\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.pos,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"12.07.2019\")))))), React.createElement(CardActions, {\n      style: {\n        flex: 1,\n        alignSelf: 'flex-start',\n        marginTop: 20,\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(EditQuestion, {\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(DeleteAlert, {\n      question: question,\n      del: this.state.del,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), !this.state.del ? React.createElement(DeleteSnackbar, {\n      open: this.state.open,\n      Toggle: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default withStyles(styles)(QuestionSummary);","map":{"version":3,"sources":["/Users/mostafahazareh/Desktop/TESTIFY/i-sasFirebaseV/src/components/questionBank/QuestionSummary.jsx"],"names":["React","Component","Card","CardActions","CardContent","Typography","Table","TableBody","TableRow","TableCell","withStyles","DeleteAlert","EditQuestion","DeleteSnackbar","styles","theme","card","display","flexWrap","maxWidth","margin","marginBottom","background","QuestionSummary","state","open","del","handleToggle","setState","render","props","question","classes","flex","questionType","questionLevel","questionCategory","answer","pos","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import moment from 'moment'\nimport { Card, CardActions, CardContent, Typography, Table,TableBody, TableRow, TableCell } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport DeleteAlert from '../Alerts/DeleteAlert';\nimport EditQuestion from './EditQuestion';\nimport DeleteSnackbar from '../Alerts/DeleteSnackbar'\n\nconst styles = theme => ({\n    card: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxWidth: '60%',\n        margin: 'auto',\n        marginBottom: '12px',\n        background: '#011'\n    },\n});\n\n\nclass QuestionSummary extends Component {\n    state={\n        open: false,\n        del:false\n    }\n    handleToggle = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n    render() {\n        const { question, classes } = this.props;\n        // console.log(question)\n        return (\n            <Card className={classes.card}>\n                <CardContent style={{ flex: 3 }}>\n                    <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\n                                    question :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    {question.question}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\n                                    Type :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    {question.questionType}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\n                                    Level :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    {question.questionLevel}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\n                                    Category :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    {question.questionCategory}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\" gutterBottom>\n                                    Answer :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    {question.answer}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\">\n                                    Author :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant=\"body1\">\n                                    Mostafa Hazareh\n                            </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"overline\" color=\"textSecondary\">\n                                    Issue by :\n                            </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    {/* {moment(question.createdAt.toDate()).calendar()} */}\n                                    12.07.2019\n                            </Typography>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                    </Table>\n                </CardContent>\n                <CardActions style={{ flex: 1, alignSelf: 'flex-start', marginTop: 20, marginBottom: 10 }}>\n                    {/* <Button size=\"small\" variant=\"outlined\" color=\"primary\" >Edit <Edit style={{ marginLeft: 10 }} /></Button> */}\n                    {/* <Button size=\"small\" variant=\"outlined\" onClick={() => { deleteQuestion(question.id) }} style={{ color: 'red' }}>Delete <Delete style={{ marginLeft: 10 }} /></Button> */}\n                    <EditQuestion question={question} />\n                    <DeleteAlert question={question} del={this.state.del} />\n                    {!this.state.del ? <DeleteSnackbar open={this.state.open} Toggle={this.handleToggle} /> : null}\n                </CardActions>\n            </Card>\n        )\n    }\n\n}\n\nexport default withStyles(styles)(QuestionSummary)"]},"metadata":{},"sourceType":"module"}